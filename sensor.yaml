##############################
# Info:
#       Combines an esp8266 (D1-Mini) and SCT-013 current sensor.
#       Use SCT-013 to sense power usage from a device and D1-Mini to relay Active/Standby state to Home Assistant.
##############################
substitutions:
  # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: washer_status
  friendly_name: Washer Status
  ip_address: !secret washer_status_ip
  icon: "mdi:washing-machine"  # https://materialdesignicons.com
  voltage: '115.0'  # average mains voltage in US.
  multiplier: '10.0'  # leave your device in standby then adjust this number until the "adc_output" value is generally at, or just below, 1.0 as shown in the logs.
  trigger_threshold: '3.75'  # turn on your device and set it to it's lowest power level and view "adc_output" in the logs then set this to 25% of that number. increase this value to filter out noise/spikes/false-positives picked up by the sensor.
  

esphomeyaml:
  # https://esphome.io/components/esphomeyaml
  name: ${device_name}
  platform: ESP8266
  board: d1_mini

wifi:
  # https://esphome.io/components/wifi
  hostname: ${device_name}
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: !secret wifi_gateway
    subnet: !secret wifi_subnet
    dns1: !secret wifi_dns1
    dns2: !secret wifi_dns2

# Enable logging
logger:

# Enable Home Assistant API
api:
  # password: !secret esphome_api_password

ota:
  password: !secret esphome_ota_password
  
## https://esphomelib.com/esphomeyaml/components/web_server.html
# web_server:
#   port: 80

sensor:
  - platform: adc
    # https://esphome.io/components/sensor/adc.html
    pin: A0
    # name: ${friendly_name} Sensor Value
    id: adc_output
    update_interval: .1s
    filters:
      # https://esphome.io/components/sensor/index.html#sensor-filters
      - sliding_window_moving_average:
          window_size: 180
          send_every: 15
      - lambda: return (((x * ${multiplier}) * ${voltage}) / 4);
    
text_sensor:
  - platform: template
    # https://esphome.io/components/text_sensor/template.html
    name: ${friendly_name}
    icon: ${icon}
    id: text_output
    lambda: |-
      if (id(adc_output).state >= ${trigger_threshold}) {
        return {"Active"};
      } else {
        return {"Standby"};
      }
    update_interval: 5s
